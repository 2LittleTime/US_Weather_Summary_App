//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TemplateFull
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class QclcdContext : DbContext
    {
        public QclcdContext()
            : base("name=QclcdContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<DailySummary> DailySummaries { get; set; }
        public DbSet<DateReference> DateReferences { get; set; }
        public DbSet<Station> Stations { get; set; }
    
        public virtual ObjectResult<usp_AvgWindSummary_Result> usp_AvgWindSummary(string wBan, Nullable<int> beginMonth, Nullable<int> beginDay, Nullable<int> beginYear, Nullable<int> endMonth, Nullable<int> endDay, Nullable<int> endYear)
        {
            var wBanParameter = wBan != null ?
                new ObjectParameter("wBan", wBan) :
                new ObjectParameter("wBan", typeof(string));
    
            var beginMonthParameter = beginMonth.HasValue ?
                new ObjectParameter("beginMonth", beginMonth) :
                new ObjectParameter("beginMonth", typeof(int));
    
            var beginDayParameter = beginDay.HasValue ?
                new ObjectParameter("beginDay", beginDay) :
                new ObjectParameter("beginDay", typeof(int));
    
            var beginYearParameter = beginYear.HasValue ?
                new ObjectParameter("beginYear", beginYear) :
                new ObjectParameter("beginYear", typeof(int));
    
            var endMonthParameter = endMonth.HasValue ?
                new ObjectParameter("endMonth", endMonth) :
                new ObjectParameter("endMonth", typeof(int));
    
            var endDayParameter = endDay.HasValue ?
                new ObjectParameter("endDay", endDay) :
                new ObjectParameter("endDay", typeof(int));
    
            var endYearParameter = endYear.HasValue ?
                new ObjectParameter("endYear", endYear) :
                new ObjectParameter("endYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AvgWindSummary_Result>("usp_AvgWindSummary", wBanParameter, beginMonthParameter, beginDayParameter, beginYearParameter, endMonthParameter, endDayParameter, endYearParameter);
        }
    
        public virtual ObjectResult<usp_PrecipSummary_Result> usp_PrecipSummary(string wBan, Nullable<int> beginMonth, Nullable<int> beginDay, Nullable<int> beginYear, Nullable<int> endMonth, Nullable<int> endDay, Nullable<int> endYear)
        {
            var wBanParameter = wBan != null ?
                new ObjectParameter("wBan", wBan) :
                new ObjectParameter("wBan", typeof(string));
    
            var beginMonthParameter = beginMonth.HasValue ?
                new ObjectParameter("beginMonth", beginMonth) :
                new ObjectParameter("beginMonth", typeof(int));
    
            var beginDayParameter = beginDay.HasValue ?
                new ObjectParameter("beginDay", beginDay) :
                new ObjectParameter("beginDay", typeof(int));
    
            var beginYearParameter = beginYear.HasValue ?
                new ObjectParameter("beginYear", beginYear) :
                new ObjectParameter("beginYear", typeof(int));
    
            var endMonthParameter = endMonth.HasValue ?
                new ObjectParameter("endMonth", endMonth) :
                new ObjectParameter("endMonth", typeof(int));
    
            var endDayParameter = endDay.HasValue ?
                new ObjectParameter("endDay", endDay) :
                new ObjectParameter("endDay", typeof(int));
    
            var endYearParameter = endYear.HasValue ?
                new ObjectParameter("endYear", endYear) :
                new ObjectParameter("endYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PrecipSummary_Result>("usp_PrecipSummary", wBanParameter, beginMonthParameter, beginDayParameter, beginYearParameter, endMonthParameter, endDayParameter, endYearParameter);
        }
    
        public virtual ObjectResult<usp_TempSummary_Result> usp_TempSummary(string wBan, Nullable<int> beginMonth, Nullable<int> beginDay, Nullable<int> beginYear, Nullable<int> endMonth, Nullable<int> endDay, Nullable<int> endYear)
        {
            var wBanParameter = wBan != null ?
                new ObjectParameter("wBan", wBan) :
                new ObjectParameter("wBan", typeof(string));
    
            var beginMonthParameter = beginMonth.HasValue ?
                new ObjectParameter("beginMonth", beginMonth) :
                new ObjectParameter("beginMonth", typeof(int));
    
            var beginDayParameter = beginDay.HasValue ?
                new ObjectParameter("beginDay", beginDay) :
                new ObjectParameter("beginDay", typeof(int));
    
            var beginYearParameter = beginYear.HasValue ?
                new ObjectParameter("beginYear", beginYear) :
                new ObjectParameter("beginYear", typeof(int));
    
            var endMonthParameter = endMonth.HasValue ?
                new ObjectParameter("endMonth", endMonth) :
                new ObjectParameter("endMonth", typeof(int));
    
            var endDayParameter = endDay.HasValue ?
                new ObjectParameter("endDay", endDay) :
                new ObjectParameter("endDay", typeof(int));
    
            var endYearParameter = endYear.HasValue ?
                new ObjectParameter("endYear", endYear) :
                new ObjectParameter("endYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TempSummary_Result>("usp_TempSummary", wBanParameter, beginMonthParameter, beginDayParameter, beginYearParameter, endMonthParameter, endDayParameter, endYearParameter);
        }
    }
}
